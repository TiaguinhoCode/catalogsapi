// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id            String    @id @default(uuid())
  name          String
  surname       String
  phone         String
  email         String?
  passoword     String?
  cep           String?
  photo         String?
  is_active     Boolean   @default(true)
  checked       Boolean   @default(false)
  enterprise_id String
  rule_id       String
  validation_id String?   @unique @default(uuid())
  created_at    DateTime? @default(now())
  updated_at    DateTime? @updatedAt

  rule Rules @relation(fields: [rule_id], references: [id])

  @@map("users")
}

model Rules {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  Users      Users[]

  @@map("rules")
}

model Companies {
  id              String    @id @default(uuid())
  company_fantasy String
  company_reason  String
  company_acronym String
  logo_company    String
  cnpj            String
  cep_address     String
  company_number  String
  phone           String?
  is_active       Boolean   @default(true)
  warehouse_id    String?   @unique
  opening_hours   DateTime  @db.Time()
  close_hours     DateTime  @db.Time()
  created_at      DateTime? @default(now())
  updated_at      DateTime? @updatedAt

  warehouse Warehouses? @relation(fields: [warehouse_id], references: [id])

  @@map("companies")
}

model Warehouses {
  id         String      @id @default(uuid())
  name       String
  is_active  Boolean     @default(true)
  created_at DateTime?   @default(now())
  updated_at DateTime?   @updatedAt
  Companies  Companies[]
  Stocks     Stocks[]

  @@map("warehouses")
}

model Stocks {
  warehouse_id        String    @unique
  current_quantity    Int
  minimium_quantity   Int
  maximum_quantity    Int
  price               Float
  purchase_price      Float
  cost_price          Float
  has_discount        Boolean   @default(false)
  discount_percentage Float
  created_at          DateTime? @default(now())
  updated_at          DateTime? @updatedAt

  warehouse Warehouses @relation(fields: [warehouse_id], references: [id])
  Products  Products[]

  @@map("stocks")
}

model Products {
  id                   String         @id @default(uuid())
  name                 String
  stock_id             String
  brand_id             String
  product_code         String         @unique
  description          String?
  sales_unit           String
  is_active            Boolean        @default(true)
  url_imagem           String
  date_of_inactivation DateTime?
  supliers             Suppliers[]
  items                Orders_Itens[]
  created_at           DateTime?      @default(now())
  updated_at           DateTime?      @updatedAt

  stock Stocks @relation(fields: [stock_id], references: [warehouse_id])
  brand Brands @relation(fields: [brand_id], references: [id])

  @@map("products")
}

model Brands {
  id         String     @id @default(uuid())
  name       String
  Products   Products[]
  created_at DateTime?  @default(now())
  updated_at DateTime?  @updatedAt

  @@map("brands")
}

model Suppliers {
  id              String     @id @default(uuid())
  company_fantasy String
  company_reason  String
  company_acronym String
  cnpj            String
  email           String
  phone           String
  is_active       Boolean    @default(true)
  products        Products[]
  created_at      DateTime?  @default(now())
  updated_at      DateTime?  @updatedAt

  @@map("suppliers")
}

model Orders {
  id                String            @id @default(uuid())
  release_date      DateTime
  completion_date   DateTime
  status_id         String
  cancellation_date DateTime?
  delivery_date     DateTime?
  gross_value       Float
  net_value         Float
  shipping_price    Float
  type_sale         String
  cep_addres        String?
  addres_number     String?
  delivery_code     String?
  method_payments   Method_Payments[]
  items             Orders_Itens[]
  created_at        DateTime?         @default(now())
  updated_at        DateTime?         @updatedAt

  status Status @relation(fields: [status_id], references: [id])

  @@map("orders")
}

model Status {
  id         String    @id @default(uuid())
  name       String
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt
  Orders     Orders[]

  @@map("status")
}

model Method_Payments {
  id         String    @id @default(uuid())
  name       String
  orders     Orders[]
  created_at DateTime? @default(now())
  updated_at DateTime? @updatedAt

  @@map("method_payments")
}

model Orders_Itens {
  orders_id   String @unique
  products_id String @unique

  Orders   Orders   @relation(fields: [orders_id], references: [id])
  Products Products @relation(fields: [products_id], references: [id])

  @@map("orders_itens")
}
